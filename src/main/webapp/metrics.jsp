<%@ page import="java.util.*, metrics.MetricRecord" %>
<%@ page isErrorPage="true" %>
<%
    // Retrieve and validate the map
    Object obj = request.getAttribute("indexMap");
    if (obj == null) {
        throw new ServletException("No 'indexMap' found. Did you dispatch through MetricsDashboardServlet?");
    }
    Map<MetricRecord, Double> map = (Map<MetricRecord, Double>) obj;

    // Build a JSON array string for JS
    StringBuilder sb = new StringBuilder();
    sb.append("[");
    boolean first = true;
    for (MetricRecord rec : map.keySet()) {
        if (!first) sb.append(",");
        first = false;
        sb.append("['")
          .append(rec.getToolName().replace("'", "\\'"))
          .append("', ")
          .append(map.get(rec))
          .append("]");
    }
    sb.append("]");
    String dataRows = sb.toString();
%>
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>CI/CD Metrics Dashboard</title>
  <script src="https://www.gstatic.com/charts/loader.js"></script>
  <script>
    // Data array generated by JSP above
    var dataRows = <%= dataRows %>;

    google.charts.load('current', { packages:['corechart','table'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'Tool');
      data.addColumn('number', 'Efficiency Index');

      // Pure JavaScript loop—no JSP inside here!
      for (var i = 0; i < dataRows.length; i++) {
        data.addRow(dataRows[i]);
      }

      var chart = new google.visualization.ColumnChart(
        document.getElementById('chart_div')
      );
      chart.draw(data);
    }
  </script>
  <style>
    table { border-collapse: collapse; width: 80%; margin-top: 20px; }
    th, td { border: 1px solid #666; padding: 8px; text-align: left; }
  </style>
</head>
<body>
  <h1>CI/CD Efficiency Comparison</h1>
  <div id="chart_div" style="width: 800px; height: 400px;"></div>

  <h2>Detailed Metrics</h2>
  <table>
    <tr>
      <th>Tool</th>
      <th>Total Time (sec)</th>
      <th>Memory Δ (Mi)</th>
      <th>Index</th>
    </tr>
    <%
      // Now render the table rows in a separate JSP block
      for (MetricRecord r : map.keySet()) {
        double idx = map.get(r);
        long memDelta = r.getMemoryAfterUsed() - r.getMemoryBeforeUsed();
    %>
    <tr>
      <td><%= r.getToolName() %></td>
      <td><%= r.getTotalPipelineTime() %></td>
      <td><%= memDelta %></td>
      <td><%= String.format("%.3f", idx) %></td>
    </tr>
    <% } %>
  </table>
</body>
</html>
