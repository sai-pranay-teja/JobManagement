version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
  pre_build:
    commands:
      - echo "Fetching SSH Key from AWS Secrets Manager..."
      - aws secretsmanager get-secret-value --secret-id MyServerSSHKey_3 --query SecretString --output text > key.pem
      - echo "Fixing newlines in key.pem..."
      - sed -i 's/\\n/\n/g' key.pem  # Replace literal \n with actual newlines
      - echo "Checking header in key.pem..."
      - grep -q "BEGIN RSA PRIVATE KEY" key.pem || sed -i '1i-----BEGIN RSA PRIVATE KEY-----' key.pem
      - echo "Checking footer in key.pem..."
      - grep -q "END RSA PRIVATE KEY" key.pem || echo "-----END RSA PRIVATE KEY-----" >> key.pem
      - chmod 400 key.pem
      - ls -lah key.pem
      - echo "Preview of key.pem (first 5 lines):"
      - head -n 5 key.pem
      - echo "Testing SSH connection..."
      - ssh -vvv -o StrictHostKeyChecking=no -i key.pem ubuntu@40.192.68.176 "echo Connected!"
      - echo "Recording pipeline start time..."
      - export PIPELINE_START_TIME=$(date +%s)
  build:
    commands:
      - echo "Building Job Management System..."
      - mkdir -p build/WEB-INF/classes
      - javac -cp "src/main/webapp/WEB-INF/lib/*" -d build/WEB-INF/classes $(find src -name "*.java")
      - cp -R src/main/resources/* build/WEB-INF/classes/
      - cp -R src/main/webapp/* build/
      - jar -cvf JobManagement_CODEBUILD.war -C build .
      - echo "Creating backup of WAR file..."
      - mkdir -p /tmp/jenkins_bak
      - cp JobManagement_CODEBUILD.war /tmp/jenkins_bak/JobManagement_CODEBUILD.war_bak
      - echo "Backup created at /tmp/jenkins_bak/JobManagement_CODEBUILD.war_bak"
      - echo "Running Unit Tests..."
      - mkdir -p test_output
      - javac -cp "src/main/webapp/WEB-INF/lib/*:src" -d test_output $(find src/main/test -name "*.java")
      - java -cp "test_output:src/main/webapp/WEB-INF/lib/*" org.junit.platform.console.ConsoleLauncher --scan-class-path test_output --details summary > test_results.log 2>&1 || true
      - echo "Unit tests completed. Preview of test results:"
      - head -n 20 test_results.log
  post_build:
    commands:
    - echo "Measuring resource usage BEFORE deployment..."
    - vmstat -s | awk '{printf "%.2f MB - %s\n", $1/1024, substr($0, index($0,$2))}' > resource_usage_before.log
    - free -h > mem_before.log
    - echo "Recording deployment start time..."
    - export DEPLOY_START_TIME=$(date +%s)
    - echo "Calculating Lead Time for Changes..."
    - export COMMIT_TIME=$(git log -1 --format=%ct)
    - export LEAD_TIME=$(expr $DEPLOY_START_TIME - $COMMIT_TIME)
    - echo "Lead Time for Changes - $LEAD_TIME seconds"
    - echo "Deploying WAR file to Tomcat server..."
    - |
      if scp -o StrictHostKeyChecking=no -i key.pem JobManagement_CODEBUILD.war ubuntu@40.192.68.176:/opt/tomcat10/webapps/; then
        echo "Deployment succeeded."
      else
        echo "Deployment failed, initiating rollback..."
        if [ -f /tmp/jenkins_bak/JobManagement_CODEBUILD.war_bak ]; then
          scp -o StrictHostKeyChecking=no -i key.pem /tmp/jenkins_bak/JobManagement_CODEBUILD.war_bak ubuntu@40.192.68.176:/opt/tomcat10/webapps/JobManagement_CODEBUILD.war
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@40.192.68.176 <<'EOF'
      sudo rm -rf /opt/tomcat10/webapps/JobManagement
      sleep 5
      sudo /opt/tomcat10/bin/shutdown.sh || true
      sudo /opt/tomcat10/bin/startup.sh
      exit
      EOF
          echo "Rollback completed."
        else
          echo "Backup not found, cannot rollback."
        fi
        exit 1
      fi
    - echo "Restarting Tomcat..."
    - |
      ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@40.192.68.176 <<'EOF'
      sudo rm -rf /opt/tomcat10/webapps/JobManagement
      sleep 5
      sudo /opt/tomcat10/bin/shutdown.sh || true
      sudo /opt/tomcat10/bin/startup.sh
      exit
      EOF
    - echo "Waiting for deployment to finish..."
    - |
      tail -f /opt/tomcat10/logs/catalina.out | while read line; do
        echo "$line" | grep -q "Deployment of web application archive" && break;
      done
    - echo "Recording deployment end time..."
    - export DEPLOY_END_TIME=$(date +%s)
    - export DEPLOY_DURATION=$(expr $DEPLOY_END_TIME - $DEPLOY_START_TIME)
    - echo "Deployment took $DEPLOY_DURATION seconds."
    - echo "Measuring resource usage AFTER deployment..."
    - vmstat -s | awk '{printf "%.2f MB - %s\n", $1/1024, substr($0, index($0,$2))}' > resource_usage_after.log
    - free -h > mem_after.log
    - echo "Recording pipeline end time..."
    - export PIPELINE_END_TIME=$(date +%s)
    - export TOTAL_PIPELINE_TIME=$(expr $PIPELINE_END_TIME - $PIPELINE_START_TIME)
    - echo "Total Pipeline Time - $TOTAL_PIPELINE_TIME seconds."
    - echo "-------------------------------------------------" > metrics_summary.log
    - echo "              CI/CD Metrics Summary              " >> metrics_summary.log
    - echo "-------------------------------------------------" >> metrics_summary.log
    - echo "| Metric                             | Value          |" >> metrics_summary.log
    - echo "-------------------------------------------------" >> metrics_summary.log
    - printf "| %-35s | %-15s |\n" "Total Pipeline Time (sec)" "$TOTAL_PIPELINE_TIME" >> metrics_summary.log
    - printf "| %-35s | %-15s |\n" "Deployment Time (sec)" "$DEPLOY_DURATION" >> metrics_summary.log
    - printf "| %-35s | %-15s |\n" "Lead Time for Changes (sec)" "$LEAD_TIME" >> metrics_summary.log
    - printf "| %-35s | %-15s |\n" "Rollback Time (sec)" "N/A" >> metrics_summary.log
    - >
      TEST_SUMMARY=$(grep -i "tests found" test_results.log | head -n 1 || echo "N/A")
    - printf "| %-35s | %-15s |\n" "Test Summary" "$TEST_SUMMARY" >> metrics_summary.log
    - echo "-------------------------------------------------" >> metrics_summary.log
    - echo "Memory Usage BEFORE (free -h):" >> metrics_summary.log
    - cat mem_before.log >> metrics_summary.log
    - echo "-------------------------------------------------" >> metrics_summary.log
    - echo "Resource Usage BEFORE (vmstat):" >> metrics_summary.log
    - cat resource_usage_before.log >> metrics_summary.log
    - echo "-------------------------------------------------" >> metrics_summary.log
    - echo "Memory Usage AFTER (free -h):" >> metrics_summary.log
    - cat mem_after.log >> metrics_summary.log
    - echo "-------------------------------------------------" >> metrics_summary.log
    - echo "Resource Usage AFTER (vmstat):" >> metrics_summary.log
    - cat resource_usage_after.log >> metrics_summary.log
    - echo "-------------------------------------------------" >> metrics_summary.log
    - echo "Metrics Summary:"
    - cat metrics_summary.log
    - echo "----- End of Metrics Display -----"

artifacts:
  files:
    - JobManagement_CODEBUILD.war
    - test_results.log
    - deployment_time.log
    - pipeline_metrics.log
    - resource_usage_before.log
    - resource_usage_after.log
    - mem_before.log
    - mem_after.log
    - metrics_summary.log
